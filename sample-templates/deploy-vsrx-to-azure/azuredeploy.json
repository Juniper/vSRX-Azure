{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",

    "parameters" : {
        "storageAccountName": {
          "type": "string",
          "metadata": {
            "description": "Storage Account Name"
          }
        },
        "vSRX-model": {
          "type": "string",
          "allowedValues": [
            "BYOL",
            "PAYG - w/Anti Virus"
          ],
          "metadata": {
            "description": "vSRX Model"
          },
          "defaultValue": "BYOL"
        },
        "virtualMachineSize": {
          "type": "string",
          "allowedValues": [
            "Standard_DS3_v2",
            "Standard_DS4_v2",
            "Standard_DS5_v2"
          ],
          "metadata": {
            "description": "vSRX Virtual Machine Size"
          },
          "defaultValue": "Standard_DS3_v2"
        },
        "vsrx-name": {
          "type": "string",
          "metadata": {
            "description": "vSRX Name"
          },
          "defaultValue": "vsrx-gw"
        },
        "vsrx-addr-ge-0-0-0": {
          "type": "string",
          "metadata": {
            "description": "vSRX ge-0/0/0 address"
          },
          "defaultValue": "192.168.10.20"
        },
        "vsrx-addr-ge-0-0-1": {
          "type": "string",
          "metadata": {
            "description": "vSRX ge-0/0/1 address"
          },
          "defaultValue": "192.168.20.20"
        },
        "vsrx-username": {
          "type": "string",
          "metadata": {
            "description": "vSRX user name"
          },
          "defaultValue": "demo"
        },
        "vsrx-password": {
          "type": "securestring",
          "metadata": {
            "description": "vSRX user password"
          }
        },
        "vsrx-sshkey": {
          "type": "string",
          "metadata": {
            "description": "vSRX user SSH rsa public key"
          }
        },
        "vnet-name": {
          "type": "string",
          "metadata": {
            "description": "Virtual network name - new or existing vnet"
          }
        },
        "vnet-prefix": {
          "type": "string",
          "metadata": {
            "description": "Virtual network prefix"
          },
          "defaultValue": "192.168.0.0/16"
        },
        "vnet-mgt-subnet-name": {
          "type": "string",
          "metadata": {
            "description": "Management subnet name"
          },
          "defaultValue": "Management"
        },
        "vnet-mgt-subnet-prefix": {
          "type": "string",
          "metadata": {
            "description": "Management subnet prefix"
          },
          "defaultValue": "192.168.0.0/24"
        },
        "vnet-trust-subnet-name": {
          "type": "string",
          "metadata": {
            "description": "Trust subnet name"
          },
          "defaultValue": "Trust"
        },
        "vnet-trust-subnet-prefix": {
          "type": "string",
          "metadata": {
            "description": "Trust subnet prefix"
          },
          "defaultValue": "192.168.20.0/24"
        },
        "vnet-untrust-subnet-name": {
          "type": "string",
          "metadata": {
            "description": "Untrust subne name"
          },
          "defaultValue": "Untrust"
        },
        "vnet-untrust-subnet-prefix": {
          "type": "string",
          "metadata": {
            "description": "Untrust subnet prefix"
          },
          "defaultValue": "192.168.10.0/24"
        }
    },

    "variables": {
        "vsrx-addr-fxp0" : "[concat(parameters('vsrx-name'), '-fxp0')]",
        "vsrx-addr-ge000" : "[concat(parameters('vsrx-name'), '-ge-0-0-0')]",
        "vnet-name":  "[parameters('vnet-name')]",
	"storageAccountName": "[concat(take(toLower(parameters('storageAccountName')), 11), uniqueString(resourceGroup().id, deployment().name))]",
	"storageContainerName": "vsrx",
        "vnet-mgt-subnet-name": "[parameters('vnet-mgt-subnet-name')]",
        "vnet-untrust-subnet-name": "[parameters('vnet-untrust-subnet-name')]",
        "vnet-trust-subnet-name": "[parameters('vnet-trust-subnet-name')]",
        "rtt-untrust": "[concat('rtt-untrust-subnet-', variables('vnet-name'))]",
        "rtt-trust": "[concat('rtt-trust-subnet-', variables('vnet-name'))]",
        "vsrxVM": {
            "vmSize": "[parameters('virtualMachineSize')]",
            "vmName": "[parameters('vsrx-name')]",
            "pipNameFxp0": "[variables('vsrx-addr-fxp0')]",
            "pipNameGe000": "[variables('vsrx-addr-ge000')]",
            "mgtNicName": "[concat('if-', parameters('vsrx-name'), '-fxp0')]",
            "untrustNicName": "[concat('if-', parameters('vsrx-name'), '-ge-0-0-0')]",
            "untrustPrivateIP": "[parameters('vsrx-addr-ge-0-0-0')]",
            "trustNicName": "[concat('if-', parameters('vsrx-name'), '-ge-0-0-1')]",
            "trustPrivateIP": "[parameters('vsrx-addr-ge-0-0-1')]"
        },
        "vnet-id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet-name'))]",
        "vnet-untrust-subnet-id": "[concat(variables('vnet-id'),'/subnets/', variables('vnet-untrust-subnet-name'))]",
        "vnet-trust-subnet-id": "[concat(variables('vnet-id'),'/subnets/', variables('vnet-trust-subnet-name'))]",
        "vnet-mgt-subnet-id": "[concat(variables('vnet-id'),'/subnets/', variables('vnet-mgt-subnet-name'))]",

        "vsrx-pip-fxp0-id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vsrxVM').pipNameFxp0)]",
        "vsrx-pip-ge000-id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vsrxVM').pipNameGe000)]",
        "plan-byol": {
          "name": "vsrx-byol-azure-image",
          "publisher": "juniper-networks",
          "product": "vsrx-next-generation-firewall"
        },
        "plan-payg-b1": {
          "name": "vsrx-azure-image-payg-b1",
          "publisher": "juniper-networks",
          "product": "vsrx-next-generation-firewall-payg"
        },
        "image-byol": {
          "publisher": "juniper-networks",
          "offer": "vsrx-next-generation-firewall",
          "sku": "vsrx-byol-azure-image",
          "version": "latest"
        },
        "image-payg-b1": {
          "publisher": "juniper-networks",
          "offer": "vsrx-next-generation-firewall-payg",
          "sku": "vsrx-azure-image-payg-b1",
          "version": "latest"
        }
    },

    "resources": [  
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
              "accountType": "Standard_LRS"
            }
        },
        {
          "type": "Microsoft.Network/publicIPAddresses",
          "name": "[variables('vsrxVM').pipNameFxp0]",
          "apiVersion": "2016-03-30",
          "location": "[resourceGroup().location]",
          "properties": {
            "publicIPAllocationMethod": "Dynamic",
            "dnsSettings": {
              "domainNameLabel": "[concat(variables('vsrxVM').pipNameFxp0, resourceGroup().name)]"
            }
          }
        },
        {
          "type": "Microsoft.Network/publicIPAddresses",
          "name": "[variables('vsrxVM').pipNameGe000]",
          "apiVersion": "2016-03-30",
          "location": "[resourceGroup().location]",
          "properties": {
            "publicIPAllocationMethod": "Dynamic",
            "dnsSettings": {
              "domainNameLabel": "[concat(variables('vsrxVM').pipNameGe000, resourceGroup().name)]"
            }
          }
        },
        {
           "apiVersion": "2016-03-30",
           "type": "Microsoft.Network/virtualNetworks",
           "name": "[variables('vnet-name')]",
           "location": "[resourceGroup().location]",
           "dependsOn": [
             "[concat('Microsoft.Network/routeTables/', variables('rtt-untrust'))]",
             "[concat('Microsoft.Network/routeTables/', variables('rtt-trust'))]"
           ],
           "properties": {
             "addressSpace": {
               "addressPrefixes": [
                 "[parameters('vnet-prefix')]"
               ]
             },
             "subnets": [
               {
                 "name": "[variables('vnet-mgt-subnet-name')]",
                 "properties": {
                     "addressPrefix": "[parameters('vnet-mgt-subnet-prefix')]"
                 }
               },
               {
                 "name": "[variables('vnet-untrust-subnet-name')]",
                 "properties": {
                     "addressPrefix": "[parameters('vnet-untrust-subnet-prefix')]",
                     "routeTable": {
                         "id": "[resourceId('Microsoft.Network/routeTables', variables('rtt-untrust'))]"
                     }
                 }
               },
               {
                 "name": "[variables('vnet-trust-subnet-name')]",
                 "properties": {
                     "addressPrefix": "[parameters('vnet-trust-subnet-prefix')]",
                     "routeTable": {
                         "id": "[resourceId('Microsoft.Network/routeTables', variables('rtt-trust'))]"
                     }
                 }
               }
             ]
           }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('rtt-untrust')]",
            "location": "[resourceGroup().location]",
            "tags": {
              "displayName": "RTT - Untrust subnet"
            },
            "properties": {
              "routes": [
                {
                  "name": "RouteToAny",
                  "properties": {
                    "addressPrefix": "0.0.0.0/0",
                    "nextHopType": "Internet"
                  }
                }
              ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('rtt-trust')]",
            "location": "[resourceGroup().location]",
            "tags": {
              "displayName": "RTT - Trust subnet"
            },
            "properties": {
              "routes": [
                {
                  "name": "RouteToAny",
                  "properties": {
                    "addressPrefix": "0.0.0.0/0",
                    "nextHopType": "VirtualAppliance",
                    "nextHopIpAddress": "[parameters('vsrx-addr-ge-0-0-1')]"
                  }
                }
              ]
            }
        },
        {
           "apiVersion": "2016-03-30",
           "type": "Microsoft.Network/networkInterfaces",
           "name": "[variables('vsrxVM').mgtNicName]",
           "location": "[resourceGroup().location]",
           "dependsOn": [
             "[concat('Microsoft.Network/virtualNetworks/', variables('vnet-name'))]",
             "[concat('Microsoft.Network/publicIPAddresses/', variables('vsrxVM').pipNameFxp0)]"
           ],
           "properties": {
             "ipConfigurations": [
               {
                 "name": "ipconfig1",
                 "properties": {
                   "privateIPAllocationMethod": "Dynamic",
                   "publicIPAddress": {
                     "id": "[variables('vsrx-pip-fxp0-id')]"
                   },
                   "subnet": {
                     "id": "[variables('vnet-mgt-subnet-id')]"
                   }
                 }
               }
             ]
           }
        },
        {
           "apiVersion": "2016-03-30",
           "type": "Microsoft.Network/networkInterfaces",
           "name": "[variables('vsrxVM').untrustNicName]",
           "location": "[resourceGroup().location]",
           "dependsOn": [
             "[concat('Microsoft.Network/virtualNetworks/', variables('vnet-name'))]",
             "[concat('Microsoft.Network/publicIPAddresses/', variables('vsrxVM').pipNameGe000)]"
           ],
           "properties": {
             "ipConfigurations": [
               {
                 "name": "ipconfig1",
                 "properties": {
                   "privateIPAllocationMethod": "Static",
                   "privateIPAddress": "[variables('vsrxVM').untrustPrivateIP]",
                   "publicIPAddress": {
                     "id": "[variables('vsrx-pip-ge000-id')]"
                   },
                   "subnet": {
                     "id": "[variables('vnet-untrust-subnet-id')]"
                   }
                 }
               }
             ]
           }
        },
        {
           "apiVersion": "2016-03-30",
           "type": "Microsoft.Network/networkInterfaces",
           "name": "[variables('vsrxVM').trustNicName]",
           "location": "[resourceGroup().location]",
           "dependsOn": [
             "[concat('Microsoft.Network/virtualNetworks/', variables('vnet-name'))]"
           ],
           "properties": {
             "ipConfigurations": [
               {
                 "name": "ipconfig1",
                 "properties": {
                   "privateIPAllocationMethod": "Static",
                   "privateIPAddress": "[variables('vsrxVM').trustPrivateIP]",
                   "subnet": {
                     "id": "[variables('vnet-trust-subnet-id')]"
                   }
                 }
               }
             ],
             "enableIPForwarding": true
           }
        },
        {
          "apiVersion": "2016-03-30",
          "name": "[variables('vsrxVM').vmName]",
          "type": "Microsoft.Compute/virtualMachines",
          "location": "[resourceGroup().location]",
	  "plan": "[if(equals(parameters('vSRX-model'), 'BYOL'), variables('plan-byol'), variables('plan-payg-b1'))]",
           "dependsOn": [
             "[concat('Microsoft.Network/networkInterfaces/', variables('vsrxVM').mgtNicName)]",
             "[concat('Microsoft.Network/networkInterfaces/', variables('vsrxVM').untrustNicName)]",
             "[concat('Microsoft.Network/networkInterfaces/', variables('vsrxVM').trustNicName)]"
           ],
          "properties": {
              "hardwareProfile": {
                "vmSize": "[variables('vsrxVM').vmSize]"
              },
	      "storageProfile": {
		  "imageReference": "[if(equals(parameters('vSRX-model'), 'BYOL'), variables('image-byol'), variables('image-payg-b1'))]",
		  "osDisk": {
	              "osType": "Linux",
	              "name": "[concat(variables('vsrxVM').vmName, '-Disk')]",
		      "vhd": {
		          "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, variables('storageContainerName'), '/', variables('vsrxVM').vmName, uniquestring(resourceGroup().id), '.vhd')]"
			  },
                  "caching": "ReadWrite",
                  "createOption": "FromImage"
                }
              },
              "osProfile": {
                "computerName": "[variables('vsrxVM').vmName]",
                "adminUsername": "[parameters('vsrx-username')]",
                "adminPassword": "[parameters('vsrx-password')]",
                "linuxConfiguration": {
                  "disablePasswordAuthentication": false
                }
              },
              "networkProfile": {
                "networkInterfaces": [
                  {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vsrxVM').mgtNicName)]",
                    "properties": {
                        "primary": true
                    }
                  },
                  {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vsrxVM').untrustNicName)]",
                    "properties": {
                        "primary": false
                    }
                  },
                  {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vsrxVM').trustNicName)]",
                    "properties": {
                        "primary": false
                    }
                  }
                ]
              },
              "diagnosticsProfile": {
                "bootDiagnostics": {
                  "enabled": true,
                  "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob]"
                }
              }
          }
        }
    ],

    "outputs": {  }
}
